name: macOS tests

on:
  push:
    branches:
      - maintenance/**
  pull_request:
    branches:
      - main
      - maintenance/**

permissions:
  contents: read # to fetch code (actions/checkout)

env:
  INSTALLDIR: "build-install"
  CCACHE_DIR: "${{ github.workspace }}/.ccache"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  get_commit_message:
    name: Get commit message
    uses: ./.github/workflows/commit_message.yml

  test_meson:
    name: Conda & umfpack/scikit-sparse, fast, py3.11/npAny, spin
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
      && (github.repository == 'scipy/scipy' || github.repository == '')
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - uses: prefix-dev/setup-pixi@ba3bb36eb2066252b2363392b7739741bb777659 # v0.8.1
        with:
          pixi-version: v0.54.1
          manifest-path: .github/workflows/pixi.toml
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
          environments: py311-system-libs-osx

      - name: Test SciPy
        shell: bash -l {0}
        working-directory: .github/workflows
        run: |
          rm -rf subprojects/boost_math  # so will fail if system boost doesn't work
          rm -rf subprojects/qhull_r  # so will fail if system qhull doesn't work
          export OMP_NUM_THREADS=2
          pixi run test-system-libs -j2

  test_scipy_openblas:
    name: M1 & OpenBLAS, fast, py3.11/npAny, spin
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
      && (github.repository == 'scipy/scipy' || github.repository == '')
    runs-on: macos-14
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Build and Install SciPy
        run: |
          sudo xcode-select -s /Applications/Xcode_15.2.app

          git submodule update --init
          GFORTRAN_LOC=$(which gfortran-13)
          ln -s $GFORTRAN_LOC gfortran
          export PATH=$PWD:$PATH

          # Ensure we have gfortran dylib
          GFORTRAN_LIB=$(dirname `gfortran --print-file-name libgfortran.dylib`)
          export DYLD_LIBRARY_PATH=$GFORTRAN_LIB

          pip install meson cython pythran pybind11 ninja numpy spin
          pip install -r requirements/openblas.txt
          spin build --with-scipy-openblas

          pip install pooch pytest hypothesis
          spin test

  test_accelerate:
    name: Accelerate, full, py3.13/npAny, spin
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
      && (github.repository == 'scipy/scipy' || github.repository == '')
    runs-on: macos-15
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - uses: prefix-dev/setup-pixi@ba3bb36eb2066252b2363392b7739741bb777659 # v0.8.1
        with:
          pixi-version: v0.54.1
          manifest-path: .github/workflows/pixi.toml
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
          environments: >-
            accelerate-lp64
            accelerate-ilp64

      - name: Test SciPy
        working-directory: .github/workflows
        run: |
          pixi run --environment=accelerate-lp64 test-accelerate-full
          pixi run --environment=accelerate-ilp64 test-accelerate-full
