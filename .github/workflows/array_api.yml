name: Array API

on:
  push:
    branches:
      - maintenance/**
  pull_request:
    branches:
      - main
      - maintenance/**

permissions:
  contents: read # to fetch code (actions/checkout)

env:
  CCACHE_DIR: "${{ github.workspace }}/.ccache"
  INSTALLDIR: "build-install"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  get_commit_message:
    name: Get commit message
    uses: ./.github/workflows/commit_message.yml

  xp_cpu:
    name: Linux PyTorch/JAX/Dask/xp-strict CPU
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
      && (github.repository == 'scipy/scipy' || github.repository == '')
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - uses: prefix-dev/setup-pixi@ba3bb36eb2066252b2363392b7739741bb777659 # v0.8.1
        with:
          pixi-version: v0.54.1
          manifest-path: .github/workflows/pixi.toml
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
          environments: array-api-cpu

      - name: Prepare compiler cache
        id: prep-ccache
        shell: bash
        run: |
          mkdir -p "${CCACHE_DIR}"
          echo "dir=$CCACHE_DIR" >> $GITHUB_OUTPUT
          NOW=$(date -u +"%F-%T")
          echo "timestamp=${NOW}" >> $GITHUB_OUTPUT

      - name: Setup compiler cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: cache-ccache
        with:
          path: ${{ steps.prep-ccache.outputs.dir }}
          key: ${{ github.workflow }}-ccache-linux-${{ steps.prep-ccache.outputs.timestamp }}
          restore-keys: |
            ${{ github.workflow }}-ccache-linux-

      - name: Test SciPy
        working-directory: .github/workflows
        run: |
          export OMP_NUM_THREADS=2
          pixi run test-cpu "--" --durations 3 --timeout=60

      - name: Test SciPy with torch/float32
        working-directory: .github/workflows
        run: pixi run --environment=array-api-cpu test-torch-float32 "--" --durations 3 --timeout=60
