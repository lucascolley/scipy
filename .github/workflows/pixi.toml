[workspace]
name = "scipy-ci"
description = "Environment and task management for SciPy CI"
authors = ["SciPy Developers <scipy-dev@python.org>"]
channels = ["https://prefix.dev/conda-forge"]
platforms = ["osx-arm64", "linux-64", "win-64", "linux-aarch64"]

[dependencies]
spin = ">=0.14,<0.15"
python = ">=3.12.11,<3.14"


### Alternative python versions ###

[feature.py311]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.py311.dependencies]
python = "3.11.*"


### Basic building ###

[feature.build.dependencies]
compilers = ">=1.11.0,<2"
pkg-config = ">=0.29.2,<0.30"
ninja = ">=1.13.1,<2"
meson = ">=1.9.0,<2"
meson-python = ">=0.18.0,<0.19"
cython = ">=3.1.3,<4"
python-build = ">=1.3.0,<2"
pip = ">=25.2,<26"
blas-devel = ">=3.9.0,<4"
numpy = ">=2.2.6,<3"
pybind11 = ">=3.0.1,<4"
pythran = ">=0.18.0,<0.19"

[feature.build.tasks.build]
cmd = "spin build --setup-args=-Dblas=blas --setup-args=-Dlapack=lapack --setup-args=-Duse-g77-abi=true"
cwd = "../.."
env = { CC = "ccache $CC", CXX = "ccache $CXX", FC = "ccache $FC" }

[feature.build.target.win-64.tasks.build]
cmd = "spin build --setup-args=-Dblas=openblas --setup-args=-Dlapack=openblas --setup-args=-Duse-g77-abi=true && cp .github/workflows/.pixi/envs/default/Library/bin/openblas.dll build-install/Lib/site-packages/scipy/linalg/openblas.dll"
cwd = "../.."
env = { CC = "ccache clang-cl", CXX = "ccache clang-cl", FC = "ccache $FC", FC_LD = "lld-link" }


### Basic testing ###

[feature.test.dependencies]
pytest = ">=8.4.2,<9"
hypothesis = ">=6.138.14,<7"
pytest-cov = ">=6.2.1,<7"
pytest-timeout = ">=2.4.0,<3"
pytest-xdist = ">=3.8.0,<4"
threadpoolctl = ">=3.6.0,<4"
pooch = ">=1.8.2,<2"
mpmath = ">=1.3.0,<2"
gmpy2 = ">=2.2.1,<3"
ccache = ">=4.11.3,<5"
spin = ">=0.14,<0.15"
marray-python = ">=0.0.11,<0.0.12"

[feature.test.tasks.test]
cmd = "spin test --no-build"
cwd = "../.."
depends-on = [{ task = "build", environment = "build" }]


### Linting ###

[feature.lint]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.lint.dependencies]
ruff = "*"
tach = "*"
cython-lint = ">=0.12.2"
packaging = "*"

[feature.lint.tasks.lint]
cmd = "spin lint"
cwd = "../.."

[feature.lint.tasks.tach]
cmd = "tach check --exact"
cwd = "../.."

[feature.lint.tasks.check-python-h]
cmd = "python check_python_h_first.py"
cwd = "../../tools"


### BLAS/LAPACK features ###

# [feature.openblas.dependencies]
# libblas = { version = "*", build = "*openblas" }
# openblas = ">=0.3.27,<0.4"


[feature.mkl.target.linux-64.dependencies]
libblas = { version = "*", build = "*mkl" }
mkl = ">=2023.2.0,<2025"

[feature.mkl.tasks.build-mkl]
cmd = "spin build --build-dir=build-mkl --setup-args=-Dblas=mkl-dynamic-ilp64-seq --setup-args=-Duse-g77-abi=true"
cwd = "scipy"
env = { CC = "ccache $CC", CXX = "ccache $CXX", FC = "ccache $FC" }


[feature.accelerate]
platforms = ["osx-arm64"]

[feature.accelerate.dependencies]
libblas = { version = "*", build = "*accelerate" }

[feature.accelerate-lp64.tasks.build-accelerate]
cmd = "spin build --build-dir=build-accelerate --with-accelerate"
cwd = "../.."
env = { CC = "ccache $CC", CXX = "ccache $CXX", FC = "ccache $FC" }

[feature.accelerate-ilp64.tasks.build-accelerate]
cmd = "spin build --build-dir=build-accelerate S-Dblas=accelerate -S-Duse-ilp64=true -S-Dblas-symbol-suffix='$NEWLAPACK$ILP64'"
cwd = "../.."
env = { CC = "ccache $CC", CXX = "ccache $CXX", FC = "ccache $FC" }

[feature.accelerate.tasks.test-accelerate-full]
cmd = "spin test --no-build --build-dir=build-accelerate -m full"
cwd = "../.."
depends-on = "build-accelerate"


### CPU/CUDA features ###

[feature.cpu]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.cpu.tasks.test-cpu]
cmd = "spin test --no-build -b all -m 'array_api_backends and not slow'"
cwd = "../.."
depends-on = [{ task = "build", environment = "build" }]


[feature.cuda]
platforms = ["linux-64"]
system-requirements = { cuda = "12" }

[feature.cuda.dependencies]
cuda-version = ">=12.0,<13"

[feature.cuda.tasks.test-cuda]
cmd = "spin test --no-build -b cupy -b torch -b jax.numpy -m 'array_api_backends and not slow'"
cwd = "../.."
env.SCIPY_DEVICE = "cuda"
depends-on = [{ task = "build", environment = "build" }]


### Array libraries ###

[feature.torch-cpu]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.torch-cpu.dependencies]
pytorch-cpu = "*"

[feature.torch-cuda.dependencies]
pytorch-gpu = "*"

[feature.torch-cpu.tasks.test-torch]
cmd = "spin test --no-build -b torch -m 'array_api_backends and not slow'"
cwd = "../.."
depends-on = [{ task = "build", environment = "build" }]

[feature.torch-cpu.tasks.test-torch-float32]
cmd = "spin test --no-build -b torch -m 'array_api_backends and not slow'"
env.SCIPY_DEFAULT_DTYPE = "float32"
cwd = "../.."
depends-on = [{ task = "build", environment = "build" }]

[feature.torch-cuda.tasks.test-torch-cuda]
cmd = "spin test --no-build -b torch -m 'array_api_backends and not slow'"
cwd = "../.."
env.SCIPY_DEVICE = "cuda"
depends-on = [{ task = "build", environment = "build" }]


[feature.cupy]
platforms = ["linux-64"]

[feature.cupy.dependencies]
cupy = "*"

[feature.cupy.tasks.test-cupy]
cmd = "spin test --no-build -b cupy -m 'array_api_backends and not slow'"
cwd = "../.."
depends-on = [{ task = "build", environment = "build" }]


[feature.jax-cpu]
# include windows so the array-api env can use the jax-cpu feature
platforms = ["linux-64", "osx-arm64", "win-64"]

# Windows support pending: https://github.com/conda-forge/jaxlib-feedstock/issues/161
[feature.jax-cpu.target.unix.dependencies]
jax = ">=0.6.0"
jaxlib = { version = "*", build = "*cpu*" }

[feature.jax-cuda]
platforms = ["linux-64"]

[feature.jax-cuda.dependencies]
jax = ">=0.6.0"
jaxlib = { version = "*", build = "*cuda*" }

# Windows support pending: https://github.com/conda-forge/jaxlib-feedstock/issues/161
[feature.jax-cpu.target.unix.tasks.test-jax]
cmd = "spin test --no-build -b jax.numpy -m 'array_api_backends and not slow'"
cwd = "../.."
depends-on = [{ task = "build", environment = "build" }]

[feature.jax-cuda.tasks.test-jax-cuda]
cmd = "spin test --no-build -b jax.numpy -m 'array_api_backends and not slow'"
cwd = "../.."
env.SCIPY_DEVICE = "cuda"
depends-on = [{ task = "build", environment = "build" }]


[feature.array_api_strict]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.array_api_strict.dependencies]
array-api-strict = "*"

[feature.array_api_strict.tasks.test-strict]
cmd = "spin test --no-build -b array_api_strict -m 'array_api_backends and not slow'"
cwd = "../.."
depends-on = [{ task = "build", environment = "build" }]


[feature.dask]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.dask.dependencies]
dask-core = "*" # Don't install distributed, tornado, etc.

[feature.dask.tasks.test-dask]
cmd = "spin test --no-build -b dask.array -m 'array_api_backends and not slow'"
cwd = "../.."
depends-on = [{ task = "build", environment = "build" }]


### Optional dependencies ###

[feature.umfpack]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.umfpack.dependencies]
scikit-umfpack = "*"


[feature.scikit-sparse]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.scikit-sparse.dependencies]
scikit-sparse = "*"


[feature.system-libs]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.system-libs.dependencies]
libboost-headers = "==1.89.0"
qhull = "==2020.2"

[feature.system-libs.activation.env]
# TODO: fix these values
BOOST_INCLUDEDIR = "${{ env.CONDA }}/envs/scipy-dev/include/boost"
BOOST_LIBRARYDIR = "${{ env.CONDA }}/envs/scipy-dev/lib"

[feature.system-libs.tasks.build-system-libs]
cmd = "spin build --use-system-libraries --setup-args=-Dblas=blas --setup-args=-Dlapack=lapack --setup-args=-Duse-g77-abi=true"
cwd = "../.."
env = { CC = "ccache $CC", CXX = "ccache $CXX", FC = "ccache $FC" }

[feature.system-libs.tasks.test-system-libs]
cmd = "spin test --no-build"
cwd = "../.."
depends-on = "build-system-libs"


### Rarer platforms ###

[feature.aarch64]
platforms = ["linux-aarch64"]

[feature.aarch64.dependencies]
spin = ">=0.14,<0.15"
python = ">=3.12.11,<3.14"


### Alternative test modes ###

[feature.fail-slow.dependencies]
pytest-fail-slow = "*"

[feature.fail-slow.tasks]
cmd = "spin test --no-build -m 'not slow' --durations=0 --durations-min=0.5 --fail-slow=1.0"
cwd = "../.."
depends-on = [{ task = "build", environment = "build" }]


### Environments ###

[environments]
build = { features = ["build"], solve-group = "default-build" }
lint = ["lint"]
torch-cuda = { features = ["test", "cuda", "torch-cuda", "mkl"], solve-group = "cuda" }
cupy = { features = ["test", "cupy"], solve-group = "cuda" }
jax-cuda = { features = ["test", "cuda", "jax-cuda"], solve-group = "cuda" }
torch = { features = ["test", "torch-cpu", "mkl"], solve-group = "mkl" }
array-api-cpu = { features = [
  "test",
  "cpu",
  "mkl",
  # array libraries
  "array_api_strict",
  "dask",
  "jax-cpu",
  "torch-cpu",
], solve-group = "mkl" }
py311-system-libs-osx = { features = ["py311", "umfpack", "scikit-sparse", "system-libs"], no-default-feature = true }
accelerate-lp64 = ["build", "test", "accelerate"]
accelerate-ilp64 = ["build", "test", "accelerate"]
aarch64-fail-slow = ["aarch64", "build", "test", "fail-slow"]
